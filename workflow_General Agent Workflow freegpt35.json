{"name":"General Agent Workflow freegpt35","description":"This workflow is used for general purpose tasks.","sender":{"type":"userproxy","config":{"name":"userproxy","llm_config":{"config_list":[{"user_id":"guestuser@gmail.com","timestamp":"2024-04-09T17:15:23.795Z","model":"freegpt35","base_url":"http://localhost:3040/v1","api_type":"openai","api_version":null,"description":"freegpt35"}],"temperature":0.1,"cache_seed":null,"timeout":null,"max_tokens":null,"extra_body":null},"human_input_mode":"NEVER","max_consecutive_auto_reply":5,"system_message":"Reply TERMINATE if the task has been sloved at full satisfaction.\nOtherwise, reply CONTINUE, or the reason why the task is not solved yet.","is_termination_msg":null,"code_execution_config":{"work_dir":null,"use_docker":false},"default_auto_reply":"TERMINATE","description":"A user proxy agent that generate plans and executes code."},"timestamp":"2024-03-15T09:13:42.198270","user_id":"default","skills":null},"receiver":{"type":"assistant","config":{"name":"primary_assistant","llm_config":{"config_list":[{"user_id":"guestuser@gmail.com","timestamp":"2024-02-11T17:22:28.909082","model":"gpt-3.5-turbo-0125","base_url":null,"api_type":null,"api_version":null,"description":"gpt-3.5-turbo\ngpt-3.5-turbo-1106\ngpt-3.5-turbo-16k\n"}],"temperature":0.1,"cache_seed":null,"timeout":null,"max_tokens":null,"extra_body":null},"human_input_mode":"NEVER","max_consecutive_auto_reply":5,"system_message":"You are a helpful AI assistant. First determine whether a function needs to be called to solve the task. if not, try to solve tasks using your coding and language skills. In the following cases, suggest python code (in a python coding block) or shell script (in a sh coding block) for the user to execute. 1. When you need to collect info, use the code to output the info you need, for example, browse or search the web, download/read a file, print the content of a webpage or a file, get the current date/time, check the operating system. After sufficient info is printed and the task is ready to be solved based on your language skill, you can solve the task by yourself. 2. When you need to perform some task with code, use the code to perform the task and output the result. Finish the task smartly. Solve the task step by step if you need to. If a plan is not provided, explain your plan first. Be clear which step uses code, and which step uses your language skill. When using code, you must indicate the script type in the code block. The user cannot provide any other feedback or perform any other action beyond executing the code you suggest. The user can't modify your code. So do not suggest incomplete code which requires users to modify. Don't use a code block if it's not intended to be executed by the user. If you want the user to save the code in a file before executing it, put # filename: <filename> inside the code block as the first line. Don't include multiple code blocks in one response. Do not ask users to copy and paste the result. Instead, use 'print' function for the output when relevant. Check the execution result returned by the user. If the result indicates there is an error, fix the error and output the code again. Suggest the full code instead of partial code or code changes. If the error can't be fixed or if the task is not solved even after the code is executed successfully, analyze the problem, revisit your assumption, collect additional info you need, and think of a different approach to try. When you find an answer, verify the answer carefully. Include verifiable evidence in your response if possible. Reply 'TERMINATE' in the end when everything is done.\nremember that the user can't use skills(function calling).","is_termination_msg":null,"code_execution_config":null,"default_auto_reply":"","description":"Default assistant to use skills or write code to solve tasks."},"timestamp":"2024-03-15T09:13:42.198270","user_id":"default","skills":[{"title":"search_bing_news","content":"# Import required libraries  \nimport requests  \nfrom bs4 import BeautifulSoup  \n  \ndef search_bing_news(keyword):  \n    # Define the Bing News Search API URL  \n    url = \"https://api.cognitive.microsoft.com/bing/v7.0/news/search\"  \n      \n    # Define the headers for the request  \n    headers = {  \n        'Ocp-Apim-Subscription-Key': 'YOUR_SUBSCRIPTION_KEY',  \n    }  \n      \n    # Define the parameters for the request  \n    params = {  \n        'q': keyword,  \n        'textFormat': 'Raw',  \n    }  \n      \n    # Make a GET request to the API endpoint  \n    response = requests.get(url, headers=headers, params=params)  \n      \n    # Parse the JSON response  \n    data = response.json()  \n      \n    # Extract the links from the response  \n    links = [item['url'] for item in data['value']]  \n      \n    return links  ","file_name":null,"description":null,"timestamp":"2024-03-16T16:03:03.681789","user_id":"default"},{"title":"SearchTools","content":"\"\"\"\nSearchTools：\n這段代碼定義了一個名為 SearchTools 的 Python 類別，其中包含兩個用於進行網路搜尋的方法：search_internet 和 search_news。這些方法通過一個外部 API 實現對互聯網和新聞的搜索。以下是對代碼的逐行解釋：\n\n共通部分：\n\nimport json - 引入 Python 的 json 模組，用於處理 JSON 格式的數據。\nimport os - 引入 os 模組，用於訪問操作系統的功能，例如環境變量。\nimport requests - 引入 requests 模組，用於發送 HTTP 請求。\nfrom langchain.tools import tool - 從 langchain.tools 模組中引入 tool 裝飾器，用於定義工具方法。\nsearch_internet 方法：\n\n使用 @tool(\"Search the internet\") 裝飾器。\n方法接受一個參數 query，表示要搜索的查詢內容。\n定義要返回的最高結果數量。\n設定 API URL 為 Google SERPer（一種搜索引擎結果頁面解析服務）的搜索接口。\n創建一個 payload 包含搜索查詢，並轉換為 JSON 格式。\n設定 HTTP 請求頭，包括 API 密鑰和內容類型。\n使用 requests 發送 POST 請求並接收響應。\n從響應中提取有關搜索結果的數據。\n遍歷並處理最多四個搜索結果，格式化為包含標題、鏈接和摘要的字符串。\n返回格式化的搜索結果。\nsearch_news 方法：\n\n與 search_internet 方法類似，但專注於搜索新聞。\n方法使用不同的 API URL (https://google.serper.dev/news) 進行新聞搜索。\n其他操作與\nsearch_internet 方法類似，包括創建 payload、發送請求、處理響應、格式化結果。\n\n總結：\n\n這兩個方法都使用了第三方 API（SERPer API），透過 Google 搜索引擎進行網絡和新聞的搜索。\n方法中的錯誤處理（例如 try-except 塊和 next）用於處理潛在的鍵值缺失情況。\n返回的結果包括搜索到的項目的標題、鏈接和摘要，格式化為易於閱讀的字符串。\n這些工具類別的方法可以在需要自動化搜索互聯網或新聞資訊的應用場景中使用。\n整體而言，這段代碼展示了如何利用外部 API 和 Python 編程來實現自動化的網絡搜尋功能，對於需要快速獲取和整理網上資訊的場景特別有用。\n\"\"\"\nimport json\nimport os\n\nimport requests\nfrom langchain.tools import tool\n\nclass SearchTools():\n  @tool(\"Search the internet\")\n  def search_internet(query):\n    \"\"\"Useful to search the internet \n    about a a given topic and return relevant results\"\"\"\n    top_result_to_return = 4\n    url = \"https://google.serper.dev/search\"\n    payload = json.dumps({\"q\": query})\n    headers = {\n        'X-API-KEY': os.environ['SERPER_API_KEY'],\n        'content-type': 'application/json'\n    }\n    response = requests.request(\"POST\", url, headers=headers, data=payload)\n    results = response.json()['organic']\n    string = []\n    for result in results[:top_result_to_return]:\n      try:\n        string.append('\\n'.join([\n            f\"Title: {result['title']}\", f\"Link: {result['link']}\",\n            f\"Snippet: {result['snippet']}\", \"\\n-----------------\"\n        ]))\n      except KeyError:\n        next\n\n    return '\\n'.join(string)\n\n  @tool(\"Search news on the internet\")\n  def search_news(query):\n    \"\"\"Useful to search news about a company, stock or any other\n    topic and return relevant results\"\"\"\"\"\n    top_result_to_return = 4\n    url = \"https://google.serper.dev/news\"\n    payload = json.dumps({\"q\": query})\n    headers = {\n        'X-API-KEY': os.environ['SERPER_API_KEY'],\n        'content-type': 'application/json'\n    }\n    response = requests.request(\"POST\", url, headers=headers, data=payload)\n    results = response.json()['news']\n    string = []\n    for result in results[:top_result_to_return]:\n      try:\n        string.append('\\n'.join([\n            f\"Title: {result['title']}\", f\"Link: {result['link']}\",\n            f\"Snippet: {result['snippet']}\", \"\\n-----------------\"\n        ]))\n      except KeyError:\n        next\n\n    return '\\n'.join(string)","file_name":null,"description":null,"timestamp":"2024-02-11T17:31:17.015992","user_id":"default"}]},"type":"twoagents","user_id":"guestuser@gmail.com","timestamp":"2024-04-09T17:21:11.667Z","summary_method":"last"}